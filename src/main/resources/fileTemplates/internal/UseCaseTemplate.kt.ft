package ${PACKAGE_NAME}
import com.duongdt3.domain.common.usecase.model.UseCaseFailModel
import com.duongdt3.domain.common.usecase.single.UseCase
import com.duongdt3.domain.common.usecase.single.UseCaseCommonFailModelFactory
import com.duongdt3.domain.common.usecase.single.UseCaseExecution
import io.reactivex.Single

class ${USE_CASE_NAME}GetDemoBookUseCase(useCaseExecution: UseCaseExecution, useCaseCommonFailModelFactory: UseCaseCommonFailModelFactory)
: UseCase<${USE_CASE_NAME}InputModel, ${USE_CASE_NAME}UseCaseSuccessModel>(
        useCaseExecution,
        useCaseCommonFailModelFactory
) {
    override fun buildUseCaseObservable(input: ${USE_CASE_NAME}UseCaseInputModel): Single<${USE_CASE_NAME}SuccessModel> {
        //TODO buildUseCaseObservable
    }

    override fun createFeatureFailOutput(throwable: Throwable): UseCaseFailModel.FeatureFail? = null
}